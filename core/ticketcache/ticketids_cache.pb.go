// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ticketids_cache.proto

package ticketcache

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TicketIds struct {
	TicketId             [][]byte `protobuf:"bytes,1,rep,name=TicketId,proto3" json:"TicketId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketIds) Reset()         { *m = TicketIds{} }
func (m *TicketIds) String() string { return proto.CompactTextString(m) }
func (*TicketIds) ProtoMessage()    {}
func (*TicketIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91ed027f164a05c, []int{0}
}

func (m *TicketIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketIds.Unmarshal(m, b)
}
func (m *TicketIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketIds.Marshal(b, m, deterministic)
}
func (m *TicketIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketIds.Merge(m, src)
}
func (m *TicketIds) XXX_Size() int {
	return xxx_messageInfo_TicketIds.Size(m)
}
func (m *TicketIds) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketIds.DiscardUnknown(m)
}

var xxx_messageInfo_TicketIds proto.InternalMessageInfo

func (m *TicketIds) GetTicketId() [][]byte {
	if m != nil {
		return m.TicketId
	}
	return nil
}

type NodeTicketIds struct {
	NTickets             map[string]*TicketIds `protobuf:"bytes,1,rep,name=NTickets,proto3" json:"NTickets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NodeTicketIds) Reset()         { *m = NodeTicketIds{} }
func (m *NodeTicketIds) String() string { return proto.CompactTextString(m) }
func (*NodeTicketIds) ProtoMessage()    {}
func (*NodeTicketIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91ed027f164a05c, []int{1}
}

func (m *NodeTicketIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTicketIds.Unmarshal(m, b)
}
func (m *NodeTicketIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTicketIds.Marshal(b, m, deterministic)
}
func (m *NodeTicketIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTicketIds.Merge(m, src)
}
func (m *NodeTicketIds) XXX_Size() int {
	return xxx_messageInfo_NodeTicketIds.Size(m)
}
func (m *NodeTicketIds) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTicketIds.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTicketIds proto.InternalMessageInfo

func (m *NodeTicketIds) GetNTickets() map[string]*TicketIds {
	if m != nil {
		return m.NTickets
	}
	return nil
}

type BlockNodes struct {
	BNodes               map[string]*NodeTicketIds `protobuf:"bytes,1,rep,name=BNodes,proto3" json:"BNodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BlockNodes) Reset()         { *m = BlockNodes{} }
func (m *BlockNodes) String() string { return proto.CompactTextString(m) }
func (*BlockNodes) ProtoMessage()    {}
func (*BlockNodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91ed027f164a05c, []int{2}
}

func (m *BlockNodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockNodes.Unmarshal(m, b)
}
func (m *BlockNodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockNodes.Marshal(b, m, deterministic)
}
func (m *BlockNodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockNodes.Merge(m, src)
}
func (m *BlockNodes) XXX_Size() int {
	return xxx_messageInfo_BlockNodes.Size(m)
}
func (m *BlockNodes) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockNodes.DiscardUnknown(m)
}

var xxx_messageInfo_BlockNodes proto.InternalMessageInfo

func (m *BlockNodes) GetBNodes() map[string]*NodeTicketIds {
	if m != nil {
		return m.BNodes
	}
	return nil
}

type NumBlocks struct {
	NBlocks              map[string]*BlockNodes `protobuf:"bytes,1,rep,name=NBlocks,proto3" json:"NBlocks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BlockCount           uint32                 `protobuf:"varint,2,opt,name=BlockCount,proto3" json:"BlockCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NumBlocks) Reset()         { *m = NumBlocks{} }
func (m *NumBlocks) String() string { return proto.CompactTextString(m) }
func (*NumBlocks) ProtoMessage()    {}
func (*NumBlocks) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91ed027f164a05c, []int{3}
}

func (m *NumBlocks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumBlocks.Unmarshal(m, b)
}
func (m *NumBlocks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumBlocks.Marshal(b, m, deterministic)
}
func (m *NumBlocks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumBlocks.Merge(m, src)
}
func (m *NumBlocks) XXX_Size() int {
	return xxx_messageInfo_NumBlocks.Size(m)
}
func (m *NumBlocks) XXX_DiscardUnknown() {
	xxx_messageInfo_NumBlocks.DiscardUnknown(m)
}

var xxx_messageInfo_NumBlocks proto.InternalMessageInfo

func (m *NumBlocks) GetNBlocks() map[string]*BlockNodes {
	if m != nil {
		return m.NBlocks
	}
	return nil
}

func (m *NumBlocks) GetBlockCount() uint32 {
	if m != nil {
		return m.BlockCount
	}
	return 0
}

type SortCalcHash struct {
	Nodeids              []string     `protobuf:"bytes,1,rep,name=Nodeids,proto3" json:"Nodeids,omitempty"`
	Tids                 []*TicketIds `protobuf:"bytes,2,rep,name=Tids,proto3" json:"Tids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SortCalcHash) Reset()         { *m = SortCalcHash{} }
func (m *SortCalcHash) String() string { return proto.CompactTextString(m) }
func (*SortCalcHash) ProtoMessage()    {}
func (*SortCalcHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91ed027f164a05c, []int{4}
}

func (m *SortCalcHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortCalcHash.Unmarshal(m, b)
}
func (m *SortCalcHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortCalcHash.Marshal(b, m, deterministic)
}
func (m *SortCalcHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortCalcHash.Merge(m, src)
}
func (m *SortCalcHash) XXX_Size() int {
	return xxx_messageInfo_SortCalcHash.Size(m)
}
func (m *SortCalcHash) XXX_DiscardUnknown() {
	xxx_messageInfo_SortCalcHash.DiscardUnknown(m)
}

var xxx_messageInfo_SortCalcHash proto.InternalMessageInfo

func (m *SortCalcHash) GetNodeids() []string {
	if m != nil {
		return m.Nodeids
	}
	return nil
}

func (m *SortCalcHash) GetTids() []*TicketIds {
	if m != nil {
		return m.Tids
	}
	return nil
}

func init() {
	proto.RegisterType((*TicketIds)(nil), "ticketcache.TicketIds")
	proto.RegisterType((*NodeTicketIds)(nil), "ticketcache.NodeTicketIds")
	proto.RegisterMapType((map[string]*TicketIds)(nil), "ticketcache.NodeTicketIds.NTicketsEntry")
	proto.RegisterType((*BlockNodes)(nil), "ticketcache.BlockNodes")
	proto.RegisterMapType((map[string]*NodeTicketIds)(nil), "ticketcache.BlockNodes.BNodesEntry")
	proto.RegisterType((*NumBlocks)(nil), "ticketcache.NumBlocks")
	proto.RegisterMapType((map[string]*BlockNodes)(nil), "ticketcache.NumBlocks.NBlocksEntry")
	proto.RegisterType((*SortCalcHash)(nil), "ticketcache.SortCalcHash")
}

func init() { proto.RegisterFile("ticketids_cache.proto", fileDescriptor_c91ed027f164a05c) }

var fileDescriptor_c91ed027f164a05c = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xc9, 0xa6, 0xdb, 0xfa, 0xba, 0x81, 0x04, 0xd4, 0xd2, 0x83, 0x8c, 0x79, 0xb0, 0x88,
	0x06, 0x99, 0x17, 0x51, 0xbc, 0x6c, 0x0a, 0x7a, 0xe9, 0x21, 0x9b, 0x67, 0xa9, 0x6d, 0x61, 0xa5,
	0x75, 0x91, 0x26, 0x15, 0xf6, 0x6d, 0x3c, 0xfb, 0x25, 0xfc, 0x6a, 0xd2, 0xa4, 0xed, 0x12, 0x68,
	0x6f, 0xef, 0xfd, 0xfb, 0x7b, 0x79, 0xff, 0x7f, 0x1a, 0x38, 0x16, 0x49, 0x98, 0xc6, 0x22, 0x89,
	0xf8, 0x7b, 0x18, 0x84, 0x9b, 0x98, 0x7c, 0xe5, 0x4c, 0x30, 0x6c, 0x2b, 0x59, 0x4a, 0xb3, 0x0b,
	0xb0, 0xd6, 0xb2, 0x7d, 0x8d, 0x38, 0x76, 0x61, 0x54, 0x37, 0x0e, 0x9a, 0xf6, 0xbd, 0x31, 0x6d,
	0xfa, 0xd9, 0x2f, 0x82, 0x89, 0xcf, 0xa2, 0x78, 0x4f, 0x3f, 0xc1, 0xc8, 0x57, 0x1d, 0x97, 0xb4,
	0x3d, 0xf7, 0x88, 0x76, 0x34, 0x31, 0x68, 0x52, 0xa3, 0xcf, 0x5b, 0x91, 0xef, 0x68, 0x33, 0xe9,
	0xae, 0x60, 0x62, 0x7c, 0xc2, 0x47, 0xd0, 0x4f, 0xe3, 0x9d, 0x83, 0xa6, 0xc8, 0xb3, 0x68, 0x59,
	0xe2, 0x2b, 0x38, 0xfc, 0x0e, 0xb2, 0x22, 0x76, 0x7a, 0x53, 0xe4, 0xd9, 0xf3, 0x13, 0x63, 0x4b,
	0xb3, 0x81, 0x2a, 0xe8, 0xbe, 0x77, 0x87, 0x66, 0x3f, 0x08, 0x60, 0x91, 0xb1, 0x30, 0x2d, 0x3d,
	0x70, 0xfc, 0x00, 0x83, 0x85, 0xac, 0x2a, 0x9f, 0xe7, 0xc6, 0x09, 0x7b, 0x90, 0x28, 0x4a, 0x59,
	0xac, 0x46, 0xdc, 0x37, 0xb0, 0x35, 0xb9, 0xc5, 0xde, 0x8d, 0x69, 0xcf, 0xed, 0xbe, 0x04, 0xdd,
	0xe2, 0x1f, 0x02, 0xcb, 0x2f, 0x3e, 0xe5, 0x72, 0x8e, 0x1f, 0x61, 0xe8, 0xab, 0xb2, 0xd5, 0x62,
	0x03, 0x92, 0x8a, 0x52, 0x16, 0xeb, 0x19, 0x7c, 0x56, 0xc5, 0x5d, 0xb2, 0x62, 0x2b, 0xa4, 0x8f,
	0x09, 0xd5, 0x14, 0x77, 0x05, 0x63, 0x7d, 0xb0, 0x25, 0xc4, 0xb5, 0x19, 0xe2, 0xb4, 0xe3, 0x86,
	0xf4, 0x04, 0x6b, 0x18, 0xaf, 0x58, 0x2e, 0x96, 0x41, 0x16, 0xbe, 0x04, 0x7c, 0x83, 0x1d, 0x18,
	0x96, 0x4c, 0x12, 0xa9, 0x0c, 0x16, 0xad, 0x5b, 0x7c, 0x09, 0x07, 0xeb, 0x52, 0xee, 0xc9, 0x68,
	0x5d, 0xff, 0x4f, 0x32, 0x1f, 0x03, 0xf9, 0x48, 0x6f, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x84,
	0xbe, 0x72, 0xb6, 0xbd, 0x02, 0x00, 0x00,
}
